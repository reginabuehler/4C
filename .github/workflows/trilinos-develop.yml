name: Trilinos develop

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 6'

env:
  IMAGE_NAME: ghcr.io/4c-multiphysics/4c-dependencies-trilinos

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push-trilinos-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.description=Image containing all the dependencies required for building and testing 4C based on the specified Trilinos commit ref
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: docker/trilinos_develop/Dockerfile
          build-args: |
            TRILINOS_VERSION=develop
          push: true
          tags: ${{ env.IMAGE_NAME }}:develop
          labels: ${{ steps.meta.outputs.labels }}

  build:
    needs: build-and-push-trilinos-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4c-multiphysics/4c-dependencies-trilinos:develop
      options: --user root --env OMPI_ALLOW_RUN_AS_ROOT=1 --env OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
    defaults:
      run:
        shell: bash
    outputs:
      test-chunks: ${{ steps.set-matrix.outputs.chunk-array }}
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/build_4C
        with:
          cmake-preset: docker_assertions
          build-targets: full
          build-directory: ${{ github.workspace }}/build
          use-ccache: "false"
      - uses: ./.github/actions/upload_directory
        with:
          directory: ${{ github.workspace }}/build
          retention-days: 1
          name: trilinos_develop_build
      - uses: ./.github/actions/chunk_test_suite
        id: set-matrix
        with:
          build-directory: ${{ github.workspace }}/build
          source-directory: ${{ github.workspace }}
          number-of-chunks: 15
          junit-report-artifact-name: trilinos_test_report.xml

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4c-multiphysics/4c-dependencies-trilinos:develop
      options: --user root --env OMPI_ALLOW_RUN_AS_ROOT=1 --env OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
    strategy:
      fail-fast: false
      matrix:
        test-chunk: ${{fromJson(needs.build.outputs.test-chunks)}}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v5
      - name: Setup developer environment for testing
        run: |
          cd $GITHUB_WORKSPACE
          git config --global --add safe.directory $GITHUB_WORKSPACE
      - uses: ./.github/actions/download_directory
        with:
          name: trilinos_develop_build
          destination: ${{ github.workspace }}/build
      - name: Test
        run: |
          cd $GITHUB_WORKSPACE/build
          ctest -I $TEST_CHUNK -j `nproc` --output-on-failure --output-junit $GITHUB_WORKSPACE/trilinos_test_report-$TEST_CHUNK.xml
        env:
          TEST_CHUNK: ${{ matrix.test-chunk }}
      - name: Upload test report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: trilinos_test_report-${{ matrix.test-chunk }}.xml
          path: |
            ${{ github.workspace }}/trilinos_test_report-${{ matrix.test-chunk }}.xml
          retention-days: 1
